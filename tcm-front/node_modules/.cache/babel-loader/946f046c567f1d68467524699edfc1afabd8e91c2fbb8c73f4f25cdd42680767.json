{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      loginForm: {\n        username: \"admin\",\n        password: \"123456\"\n      },\n      loading: false,\n      pwdType: \"password\"\n    };\n  },\n  created() {\n    //若store中已有登录信息则直接跳转\n    if (this.$store.state.isLogin) {\n      this.$router.replace('/');\n    }\n  },\n  methods: {\n    //登录\n    login() {\n      this.$axios.get('/user/login', {\n        params: {\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        }\n      }).then(res => {\n        /*登陆成功*/\n        if (res.data.code == 200) {\n          this.$store.commit('login', {\n            user: res.data.result,\n            isLogin: true\n          });\n          if (res.data.result.character == '管理员') {\n            this.$router.replace('/manager');\n          } else {\n            this.$router.replace('/ordinaryuser');\n          }\n        } else {\n          /*登陆失败*/\n          this.$alert(res.data.message, '提示', {\n            confirmButtonText: '确定'\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    //注册\n    register() {\n      this.$router.push('/register');\n    },\n    //重置密码\n    reset() {\n      this.$router.push({\n        path: '/reset',\n        query: {\n          username: this.loginForm.username\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","username","password","loading","pwdType","created","$store","state","isLogin","$router","replace","methods","login","$axios","get","params","then","res","code","commit","user","result","character","$alert","message","confirmButtonText","catch","err","console","log","register","push","reset","path","query"],"sources":["src/views/Login/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"login-form-layout\">\r\n      <el-form\r\n        autocomplete=\"on\"\r\n        :model=\"loginForm\"\r\n        ref=\"loginForm\"\r\n        label-position=\"left\"\r\n      >\r\n        \r\n        <h2 class=\"login-title color-main\">指标体系管理系统</h2>\r\n\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            v-model=\"loginForm.username\"\r\n            autocomplete=\"on\"\r\n            placeholder=\"请输入用户名\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            name=\"password\"\r\n            :type=\"pwdType\"\r\n            v-model=\"loginForm.password\"\r\n            autocomplete=\"on\"\r\n            placeholder=\"请输入密码\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item style=\"margin-bottom: 10px\">\r\n          <el-button\r\n            style=\"width: 100%\"\r\n            type=\"primary\"\r\n            :loading=\"loading\"\r\n            @click.native=\"login\"\r\n          >登录</el-button>\r\n        </el-form-item>\r\n\r\n        <el-form-item style=\"margin-bottom: 10px\">\r\n          <el-button\r\n            style=\"width: 100%\"\r\n            type=\"primary\"\r\n            :loading=\"loading\"\r\n            @click.native=\"register\"\r\n          >注册</el-button>\r\n        </el-form-item>\r\n\r\n        <el-form-item style=\"margin-bottom: 10px\">\r\n          <el-button\r\n            style=\"width: 100%\"\r\n            type=\"primary\"\r\n            :loading=\"loading\"\r\n            @click.native=\"reset\"\r\n          >重置密码</el-button>\r\n        </el-form-item>\r\n        \r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: \"admin\",\r\n        password: \"123456\"\r\n      },\r\n      loading: false,\r\n      pwdType: \"password\",\r\n    };\r\n  },\r\n  created(){\r\n    //若store中已有登录信息则直接跳转\r\n    if(this.$store.state.isLogin){\r\n      this.$router.replace('/')\r\n    }\r\n  },\r\n  methods: {\r\n    //登录\r\n    login() {\r\n      this.$axios.get('/user/login',{\r\n        params:{\r\n          username:this.loginForm.username,\r\n          password:this.loginForm.password\r\n        }\r\n      }).then(res=>{\r\n          /*登陆成功*/\r\n        if(res.data.code==200){\r\n          this.$store.commit('login',{\r\n            user:res.data.result,\r\n            isLogin:true\r\n          })\r\n          if(res.data.result.character=='管理员'){\r\n            this.$router.replace('/manager')\r\n          }else{\r\n            this.$router.replace('/ordinaryuser')\r\n          }\r\n        }else{\r\n          /*登陆失败*/\r\n          this.$alert(res.data.message, '提示', {\r\n              confirmButtonText: '确定'\r\n          })\r\n        }\r\n      }).catch(err=>{\r\n        console.log(err)\r\n      })\r\n    },\r\n    //注册\r\n    register(){\r\n      this.$router.push('/register')\r\n    },\r\n    //重置密码\r\n    reset(){\r\n      this.$router.push({\r\n        path:'/reset',\r\n        query:{\r\n          username:this.loginForm.username\r\n        }\r\n      })\r\n    }\r\n  }\r\n};\r\n</script>\r\n \r\n<style scoped>\r\n.login-form-layout {\r\n  /* position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  width: 360px;\r\n  margin: 140px auto;\r\n  border-top: 10px solid #409eff; */\r\n  border-radius: 15px;\r\n  background-clip: padding-box;\r\n  margin: 90px auto;\r\n  width: 350px;\r\n  padding: 35px 35px 15px 35px;\r\n  background: #fff;\r\n  border: 1px solid #eaeaea;\r\n  box-shadow: 0 0 25px #cac6c6;\r\n}\r\n \r\n.login-title {\r\n  text-align: center;\r\n}\r\n \r\n.login-center-layout {\r\n  background: #409eff;\r\n  width: auto;\r\n  height: auto;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  margin-top: 200px;\r\n}\r\n</style>"],"mappings":";AAkEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CAAAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,MAAA;MACA,KAAAC,MAAA,CAAAC,GAAA;QACAC,MAAA;UACAd,QAAA,OAAAD,SAAA,CAAAC,QAAA;UACAC,QAAA,OAAAF,SAAA,CAAAE;QACA;MACA,GAAAc,IAAA,CAAAC,GAAA;QACA;QACA,IAAAA,GAAA,CAAAlB,IAAA,CAAAmB,IAAA;UACA,KAAAZ,MAAA,CAAAa,MAAA;YACAC,IAAA,EAAAH,GAAA,CAAAlB,IAAA,CAAAsB,MAAA;YACAb,OAAA;UACA;UACA,IAAAS,GAAA,CAAAlB,IAAA,CAAAsB,MAAA,CAAAC,SAAA;YACA,KAAAb,OAAA,CAAAC,OAAA;UACA;YACA,KAAAD,OAAA,CAAAC,OAAA;UACA;QACA;UACA;UACA,KAAAa,MAAA,CAAAN,GAAA,CAAAlB,IAAA,CAAAyB,OAAA;YACAC,iBAAA;UACA;QACA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA;IACA;IACA;IACAG,SAAA;MACA,KAAArB,OAAA,CAAAsB,IAAA;IACA;IACA;IACAC,MAAA;MACA,KAAAvB,OAAA,CAAAsB,IAAA;QACAE,IAAA;QACAC,KAAA;UACAjC,QAAA,OAAAD,SAAA,CAAAC;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}