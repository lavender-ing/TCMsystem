{"ast":null,"code":"export default {\n  data() {\n    return {\n      types: [{\n        value: '医务人员'\n      }, {\n        value: '管理员'\n      }],\n      ruleForm: {\n        username: '',\n        password: '',\n        character: '医务人员',\n        phone: '',\n        question: '',\n        answer: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        character: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        question: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    goBack() {\n      this.$router.back();\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.post('/user/register', {\n            username: this.ruleForm.username,\n            password: this.ruleForm.password,\n            character: this.ruleForm.character,\n            phone: this.ruleForm.phone,\n            question: this.ruleForm.question,\n            answer: this.ruleForm.answer,\n            registertime: new Date(),\n            lastlogin: new Date()\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.$message({\n                type: 'success',\n                message: \"添加成功！\"\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.data.message\n              });\n            }\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: \"请检查输入信息！\"\n          });\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["data","types","value","ruleForm","username","password","character","phone","question","answer","rules","required","message","trigger","created","methods","goBack","$router","back","submitForm","formName","$refs","validate","valid","$axios","post","registertime","Date","lastlogin","then","res","code","$message","type","resetForm","resetFields"],"sources":["src/views/Manager/UserManagement/Insert/index.vue"],"sourcesContent":["<template>\n  <div>\n    <el-page-header @back=\"goBack\" content=\"新增用户\" style=\"margin:20px;\"></el-page-header>\n\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"ruleForm.username\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"用户密码\" prop=\"password\">\n        <el-input v-model=\"ruleForm.password\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"角色\" prop=\"character\">\n        <el-select v-model=\"ruleForm.character\" placeholder=\"请选择\">\n          <el-option\n            v-for=\"item in types\"\n            :key=\"item.value\"\n            :label=\"item.value\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n\n      <el-form-item label=\"联系电话\" prop=\"phone\">\n        <el-input v-model=\"ruleForm.phone\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"密保问题\" prop=\"question\">\n        <el-input v-model=\"ruleForm.question\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"密保答案\" prop=\"answer\">\n        <el-input v-model=\"ruleForm.answer\"></el-input>\n      </el-form-item>\n      \n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n      </el-form-item>\n\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      types:[\n        {\n          value:'医务人员',\n        },\n        {\n          value:'管理员'\n        }\n      ],\n      ruleForm: {\n        username:'',\n        password:'',\n        character:'医务人员',\n        phone:'',\n        question:'',\n        answer:'',\n      },\n      rules: {\n        username: [{required: true, message: '', trigger: 'blur'}],\n        password: [{required: true, message: '', trigger: 'blur'}],\n        character: [{required: true, message: '', trigger: 'blur'}],\n        phone: [{required: true, message: '', trigger: 'blur'}],\n        question: [{required: true, message: '', trigger: 'blur'}],\n        answer: [{required: true, message: '', trigger: 'blur'}],\n      }\n    };\n  },\n  created(){\n    \n  },\n  methods: {\n    goBack(){\n      this.$router.back()\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$axios.post('/user/register',{\n            username:this.ruleForm.username,\n            password:this.ruleForm.password,\n            character:this.ruleForm.character,\n            phone:this.ruleForm.phone,\n            question:this.ruleForm.question,\n            answer:this.ruleForm.answer,\n            registertime:new Date(),\n            lastlogin:new Date(),\n          }).then(res=>{\n            if(res.data.code==200){\n              this.$message({\n                type: 'success',\n                message: \"添加成功！\",\n              });\n            }else{\n              this.$message({\n                type: 'error',\n                message: res.data.message,\n              });\n            }\n          })\n        } else {\n          this.$message({\n            type: 'error',\n            message: \"请检查输入信息！\",\n          });\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n  }\n}\n</script>\n\n<style scoped>\n.el-form{\n  margin: auto;\n  margin-top:20px;\n  width:50%;\n}\n\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n\n</style>"],"mappings":"AA+CA;EACAA,KAAA;IACA;MACAC,KAAA,GACA;QACAC,KAAA;MACA,GACA;QACAA,KAAA;MACA,EACA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,SAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAN,QAAA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAR,QAAA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAP,SAAA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAN,KAAA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAL,QAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAJ,MAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,IAAA;YACArB,QAAA,OAAAD,QAAA,CAAAC,QAAA;YACAC,QAAA,OAAAF,QAAA,CAAAE,QAAA;YACAC,SAAA,OAAAH,QAAA,CAAAG,SAAA;YACAC,KAAA,OAAAJ,QAAA,CAAAI,KAAA;YACAC,QAAA,OAAAL,QAAA,CAAAK,QAAA;YACAC,MAAA,OAAAN,QAAA,CAAAM,MAAA;YACAiB,YAAA,MAAAC,IAAA;YACAC,SAAA,MAAAD,IAAA;UACA,GAAAE,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAA9B,IAAA,CAAA+B,IAAA;cACA,KAAAC,QAAA;gBACAC,IAAA;gBACArB,OAAA;cACA;YACA;cACA,KAAAoB,QAAA;gBACAC,IAAA;gBACArB,OAAA,EAAAkB,GAAA,CAAA9B,IAAA,CAAAY;cACA;YACA;UACA;QACA;UACA,KAAAoB,QAAA;YACAC,IAAA;YACArB,OAAA;UACA;QACA;MACA;IACA;IACAsB,UAAAd,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAe,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}