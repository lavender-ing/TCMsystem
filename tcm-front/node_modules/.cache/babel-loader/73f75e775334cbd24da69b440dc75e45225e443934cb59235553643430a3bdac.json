{"ast":null,"code":"export default {\n  data() {\n    return {\n      ruleForm: {},\n      rules: {\n        id: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.ruleForm = JSON.parse(this.$route.query.data);\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.put('/type/update', {\n            id: this.ruleForm.id,\n            name: this.ruleForm.name\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.$message({\n                type: 'success',\n                message: \"更新成功！\"\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.data.message\n              });\n            }\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: \"请检查输入信息！\"\n          });\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["data","ruleForm","rules","id","required","message","trigger","name","created","JSON","parse","$route","query","methods","submitForm","formName","$refs","validate","valid","$axios","put","then","res","code","$message","type","resetForm","resetFields"],"sources":["src/views/Operator/Type/Update/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"btn\">\r\n      <el-button type=\"primary\" size=\"small\" @click=\"add\">新增商品种类</el-button>\r\n    </div>\r\n\r\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n\r\n      <el-form-item label=\"ID\" prop=\"id\">\r\n        <el-input v-model=\"ruleForm.id\" disabled></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"商品类型\" prop=\"name\">\r\n        <el-input v-model=\"ruleForm.name\"></el-input>\r\n      </el-form-item>\r\n      \r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n      </el-form-item>\r\n\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n\r\n    return {\r\n      ruleForm: {\r\n\r\n      },\r\n      rules: {\r\n        id: [{required: true, message: '', trigger: 'blur'}],\r\n        name: [{required: true, message: '', trigger: 'blur'}],\r\n      },\r\n    };\r\n  },\r\n  created(){\r\n    this.ruleForm=JSON.parse(this.$route.query.data)\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.$axios.put('/type/update',{\r\n            id:this.ruleForm.id,\r\n            name:this.ruleForm.name\r\n          }).then(res=>{\r\n            if(res.data.code==200){\r\n              this.$message({\r\n                type: 'success',\r\n                message: \"更新成功！\",\r\n              });\r\n            }else{\r\n              this.$message({\r\n                type: 'error',\r\n                message: res.data.message,\r\n              });\r\n            }\r\n          })\r\n        } else {\r\n          this.$message({\r\n            type: 'error',\r\n            message: \"请检查输入信息！\",\r\n          });\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form{\r\n  margin: auto;\r\n  margin-top:20px;\r\n  width:50%;\r\n}\r\n\r\n.btn{\r\n  margin: 0px;\r\n  margin-bottom: 20px;\r\n  margin-right: 20px;\r\n  float: left;\r\n}\r\n\r\n</style>"],"mappings":"AA0BA;EACAA,KAAA;IAEA;MACAC,QAAA,GAEA;MACAC,KAAA;QACAC,EAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,IAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAP,QAAA,GAAAQ,IAAA,CAAAC,KAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAZ,IAAA;EACA;EACAa,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,GAAA;YACAjB,EAAA,OAAAF,QAAA,CAAAE,EAAA;YACAI,IAAA,OAAAN,QAAA,CAAAM;UACA,GAAAc,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAtB,IAAA,CAAAuB,IAAA;cACA,KAAAC,QAAA;gBACAC,IAAA;gBACApB,OAAA;cACA;YACA;cACA,KAAAmB,QAAA;gBACAC,IAAA;gBACApB,OAAA,EAAAiB,GAAA,CAAAtB,IAAA,CAAAK;cACA;YACA;UACA;QACA;UACA,KAAAmB,QAAA;YACAC,IAAA;YACApB,OAAA;UACA;QACA;MACA;IACA;IACAqB,UAAAX,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAY,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}