{"ast":null,"code":"import dateformat from '@/utils/dateformat';\nexport default {\n  data() {\n    //验证邮箱\n    var checkEmail = (rule, value, cb) => {\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n      if (regEmail.test(value)) {\n        //合法\n        return cb();\n      }\n      //不合法\n      cb(new Error('请输入合法的邮箱！'));\n    };\n\n    //验证手机号\n    var checkMobile = (rule, value, cb) => {\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[0123456789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\n      if (regMobile.test(value)) {\n        //合法\n        return cb();\n      }\n      //不合法\n      cb(new Error('请输入合法的手机号！'));\n    };\n    return {\n      ruleForm: {},\n      rules: {\n        id: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        username: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        character: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }],\n        mail: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        sex: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        lastlogin: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        registertime: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        question: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.ruleForm = JSON.parse(this.$route.query.data);\n    this.ruleForm.registertime = dateformat.format(this.ruleForm.registertime);\n    this.ruleForm.lastlogin = dateformat.format(this.ruleForm.lastlogin);\n  },\n  methods: {\n    goBack() {\n      this.$router.back();\n    },\n    //提交\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.put('/user/update', {\n            id: this.ruleForm.id,\n            username: this.ruleForm.username,\n            password: this.ruleForm.password,\n            character: this.ruleForm.character,\n            phone: this.ruleForm.phone,\n            mail: this.ruleForm.mail,\n            address: this.ruleForm.address,\n            sex: this.ruleForm.sex,\n            picturepath: this.ruleForm.picturepath,\n            question: this.ruleForm.question,\n            answer: this.ruleForm.answer\n          }).then(res => {\n            if (res.data.code == 200) {\n              this.$message({\n                type: 'success',\n                message: \"更新成功！\"\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.data.message\n              });\n            }\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: \"请检查输入信息！\"\n          });\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    //图片上传\n    handleAvatarSuccess(res, file) {\n      this.ruleForm.picturepath = res.result;\n      this.$store.commit('changeProfile', {\n        picturepath: res.result\n      });\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isJPG && isLt2M;\n    }\n  }\n};","map":{"version":3,"names":["dateformat","data","checkEmail","rule","value","cb","regEmail","test","Error","checkMobile","regMobile","ruleForm","rules","id","required","message","trigger","username","password","character","phone","validator","mail","address","sex","lastlogin","registertime","question","answer","created","JSON","parse","$route","query","format","methods","goBack","$router","back","submitForm","formName","$refs","validate","valid","$axios","put","picturepath","then","res","code","$message","type","resetForm","resetFields","handleAvatarSuccess","file","result","$store","commit","beforeAvatarUpload","isJPG","isLt2M","size","error"],"sources":["src/views/Manager/UserManagement/Update/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <el-page-header @back=\"goBack\" content=\"更新用户信息\" style=\"margin:20px;\"></el-page-header>\r\n\r\n    <el-upload\r\n      class=\"avatar-uploader\"\r\n      action=\"http://localhost:8081/upload/file\"\r\n      :show-file-list=\"false\"\r\n      :on-success=\"handleAvatarSuccess\"\r\n      :before-upload=\"beforeAvatarUpload\"\r\n      style=\"margin:50px;\">\r\n      <img v-if=\"ruleForm.picturepath\" :src=\"`http://localhost:8081/`+ruleForm.picturepath\" class=\"avatar\">\r\n      <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n    </el-upload>\r\n\r\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n\r\n      <el-form-item label=\"用户ID\" prop=\"id\">\r\n        <el-input v-model=\"ruleForm.id\" disabled></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"ruleForm.username\" disabled></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"用户密码\" prop=\"password\">\r\n        <el-input v-model=\"ruleForm.password\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"角色\" prop=\"character\">\r\n        <el-input v-model=\"ruleForm.character\" disabled></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"联系电话\" prop=\"phone\">\r\n        <el-input v-model=\"ruleForm.phone\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"邮箱\" prop=\"mail\">\r\n        <el-input v-model=\"ruleForm.mail\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"住址\" prop=\"address\">\r\n        <el-input v-model=\"ruleForm.address\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"用户性别\" prop=\"sex\">\r\n        <el-radio-group v-model=\"ruleForm.sex\">\r\n          <el-radio label=\"男\"></el-radio>\r\n          <el-radio label=\"女\"></el-radio>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"安全问题\" prop=\"question\">\r\n        <el-input v-model=\"ruleForm.question\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"问题答案\" prop=\"answer\">\r\n        <el-input v-model=\"ruleForm.answer\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"注册时间\" prop=\"registertime\">\r\n        <el-input v-model=\"ruleForm.registertime\" disabled></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"上次登录\" prop=\"lastlogin\">\r\n        <el-input v-model=\"ruleForm.lastlogin\" disabled></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n      </el-form-item>\r\n\r\n    </el-form>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dateformat from '@/utils/dateformat';\r\nexport default {\r\n  data() {\r\n    //验证邮箱\r\n    var checkEmail = (rule,value,cb) => {\r\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\r\n      if(regEmail.test(value)){\r\n        //合法\r\n        return cb();\r\n      }\r\n      //不合法\r\n      cb(new Error('请输入合法的邮箱！'));\r\n    }\r\n\r\n    //验证手机号\r\n    var checkMobile = (rule,value,cb) =>{\r\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[0123456789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\r\n      if(regMobile.test(value)){\r\n        //合法\r\n        return cb();\r\n      }\r\n      //不合法\r\n      cb(new Error('请输入合法的手机号！'));\r\n    }\r\n\r\n    return {\r\n      ruleForm: {\r\n\r\n      },\r\n      rules: {\r\n        id: [{required: true, message: '', trigger: 'blur'}],\r\n        username: [{required: true, message: '', trigger: 'blur'}],\r\n        password: [{required: true, message: '', trigger: 'blur'}],\r\n        character: [{required: true, message: '', trigger: 'blur'}],\r\n        phone: [{required: true, message: '', trigger: 'blur'},{validator: checkMobile, trigger: 'blur'}],\r\n        mail: [{required: true, message: '', trigger: 'blur'},{validator: checkEmail, trigger: 'blur'}],\r\n        address: [{required: true, message: '', trigger: 'blur'}],\r\n        sex: [{required: true, message: '', trigger: 'blur'}],\r\n        lastlogin: [{required: true, message: '', trigger: 'blur'}],\r\n        registertime: [{required: true, message: '', trigger: 'blur'}],\r\n        question: [{required: true, message: '', trigger: 'blur'}],\r\n        answer: [{required: true, message: '', trigger: 'blur'}],\r\n      },\r\n    };\r\n  },\r\n  created(){\r\n    this.ruleForm=JSON.parse(this.$route.query.data)\r\n    this.ruleForm.registertime=dateformat.format(this.ruleForm.registertime)\r\n    this.ruleForm.lastlogin=dateformat.format(this.ruleForm.lastlogin)\r\n  },\r\n  methods: {\r\n    goBack(){\r\n      this.$router.back()\r\n    },\r\n    //提交\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.$axios.put('/user/update',{\r\n            id:this.ruleForm.id,\r\n            username:this.ruleForm.username,\r\n            password:this.ruleForm.password,\r\n            character:this.ruleForm.character,\r\n            phone:this.ruleForm.phone,\r\n            mail:this.ruleForm.mail,\r\n            address:this.ruleForm.address,\r\n            sex:this.ruleForm.sex,\r\n            picturepath:this.ruleForm.picturepath,\r\n            question:this.ruleForm.question,\r\n            answer:this.ruleForm.answer\r\n          }).then(res=>{\r\n            if(res.data.code==200){\r\n              this.$message({\r\n                type: 'success',\r\n                message: \"更新成功！\",\r\n              });\r\n            }else{\r\n              this.$message({\r\n                type: 'error',\r\n                message: res.data.message,\r\n              });\r\n            }\r\n          })\r\n        } else {\r\n          this.$message({\r\n            type: 'error',\r\n            message: \"请检查输入信息！\",\r\n          });\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    //图片上传\r\n    handleAvatarSuccess(res, file) {\r\n      this.ruleForm.picturepath=res.result\r\n      this.$store.commit('changeProfile',{\r\n        picturepath:res.result\r\n      })\r\n    },\r\n\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!');\r\n      }\r\n      return isJPG && isLt2M;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form{\r\n  margin: auto;\r\n  margin-top:20px;\r\n  width:50%;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}