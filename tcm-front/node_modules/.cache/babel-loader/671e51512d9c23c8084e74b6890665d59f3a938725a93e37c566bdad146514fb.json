{"ast":null,"code":"import Echarts from '@/components/Echarts';\nexport default {\n  data() {\n    return {\n      tableData: [],\n      timevalue: [new Date(2023, 0, 1, 10, 0), new Date(2023, 3, 1, 10, 0)],\n      option: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: ['line', 'bar']\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        legend: {\n          data: ['Evaporation', 'Precipitation', 'Temperature']\n        },\n        xAxis: [{\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          axisPointer: {\n            type: 'shadow'\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: 'Precipitation',\n          min: 0,\n          max: 250,\n          interval: 50,\n          axisLabel: {\n            formatter: '{value} ml'\n          }\n        }, {\n          type: 'value',\n          name: 'Temperature',\n          min: 0,\n          max: 25,\n          interval: 5,\n          axisLabel: {\n            formatter: '{value} °C'\n          }\n        }],\n        series: [{\n          name: 'Evaporation',\n          type: 'bar',\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + ' ml';\n            }\n          },\n          data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3]\n        }, {\n          name: 'Precipitation',\n          type: 'bar',\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + ' ml';\n            }\n          },\n          data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\n        }, {\n          name: 'Temperature',\n          type: 'line',\n          yAxisIndex: 1,\n          tooltip: {\n            valueFormatter: function (value) {\n              return value + ' °C';\n            }\n          },\n          data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2]\n        }]\n      }\n    };\n  },\n  components: {\n    Echarts\n  },\n  created() {},\n  methods: {\n    //查询\n    handle() {\n      this.$axios.post('/order/analysisbytime', {\n        start: this.timevalue[0],\n        end: this.timevalue[1]\n      }).then(res => {\n        if (res.data.code == 200) {\n          this.tableData = res.data.result;\n        } else {\n          this.$message({\n            type: 'error',\n            message: res.data.message\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Echarts","data","tableData","timevalue","Date","option","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","xAxis","yAxis","name","min","max","interval","axisLabel","formatter","series","valueFormatter","value","yAxisIndex","components","created","methods","handle","$axios","post","start","end","then","res","code","result","$message","message"],"sources":["src/views/Operator/Analysis/List/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div class=\"block\">\r\n      <el-date-picker\r\n        v-model=\"timevalue\"\r\n        type=\"datetimerange\"\r\n        range-separator=\"至\"\r\n        start-placeholder=\"开始日期\"\r\n        end-placeholder=\"结束日期\">\r\n      </el-date-picker>\r\n\r\n      <el-button\r\n        style=\"margin-left:30px;\"\r\n        size=\"mini\"\r\n        @click=\"handle()\">查询</el-button>\r\n\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table\r\n        :data=\"tableData\"\r\n        :border=true\r\n        style=\"width: 100%\"\r\n        :stripe=true\r\n        :header-cell-style=\"{'text-align':'center'}\"\r\n        :cell-style=\"{'text-align':'center'}\">\r\n\r\n        <el-table-column\r\n          prop=\"name\"\r\n          label=\"商品种类\"\r\n          :show-overflow-tooltip=true>\r\n        </el-table-column>\r\n\r\n        <el-table-column\r\n          prop=\"num\"\r\n          label=\"数量\"\r\n          :show-overflow-tooltip=true>\r\n        </el-table-column>\r\n\r\n        <el-table-column\r\n          prop=\"sales\"\r\n          label=\"销售额\"\r\n          :show-overflow-tooltip=true>\r\n        </el-table-column>\r\n\r\n      </el-table>\r\n      <Echarts :option=\"option\" style=\"height: 400px;width: 630px\"></Echarts>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Echarts from '@/components/Echarts'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      timevalue: [new Date(2023, 0, 1, 10, 0), new Date(2023, 3, 1, 10, 0)],\r\n            option:{\r\n            tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'cross',\r\n              crossStyle: {\r\n              color: '#999'\r\n            }\r\n          }\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            dataView: { show: true, readOnly: false },\r\n            magicType: { show: true, type: ['line', 'bar'] },\r\n            restore: { show: true },\r\n            saveAsImage: { show: true }\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['Evaporation', 'Precipitation', 'Temperature']\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: 'Precipitation',\r\n            min: 0,\r\n            max: 250,\r\n            interval: 50,\r\n            axisLabel: {\r\n              formatter: '{value} ml'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: 'Temperature',\r\n            min: 0,\r\n            max: 25,\r\n            interval: 5,\r\n            axisLabel: {\r\n              formatter: '{value} °C'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: 'Evaporation',\r\n            type: 'bar',\r\n            tooltip: {\r\n              valueFormatter: function (value) {\r\n                return value + ' ml';\r\n              }\r\n            },\r\n            data: [\r\n              2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3\r\n            ]\r\n          },\r\n          {\r\n            name: 'Precipitation',\r\n            type: 'bar',\r\n            tooltip: {\r\n              valueFormatter: function (value) {\r\n                return value + ' ml';\r\n              }\r\n            },\r\n            data: [\r\n              2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3\r\n            ]\r\n          },\r\n          {\r\n            name: 'Temperature',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            tooltip: {\r\n              valueFormatter: function (value) {\r\n                return value + ' °C';\r\n              }\r\n            },\r\n            data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  components:{\r\n    Echarts\r\n  },\r\n  created(){\r\n\r\n  },\r\n  methods: {\r\n      //查询\r\n      handle(){\r\n        this.$axios.post('/order/analysisbytime',{\r\n          start:this.timevalue[0],\r\n          end:this.timevalue[1]\r\n        }).then(res=>{\r\n          if(res.data.code==200){\r\n            this.tableData=res.data.result\r\n          }else{\r\n            this.$message({\r\n              type: 'error',\r\n              message: res.data.message,\r\n            });\r\n          }\r\n        })\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.table{\r\n  margin:20px;\r\n}\r\n\r\n.btn{\r\n  margin: 0px;\r\n  margin-bottom: 20px;\r\n  margin-right: 20px;\r\n  float: right;\r\n}\r\n\r\n.block{\r\n  margin: 50px;\r\n}\r\n\r\n</style>"],"mappings":"AAqDA,OAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,SAAA,OAAAC,IAAA,yBAAAA,IAAA;MACAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;YACAC,UAAA;cACAC,KAAA;YACA;UACA;QACA;QACAC,OAAA;UACAC,OAAA;YACAC,QAAA;cAAAC,IAAA;cAAAC,QAAA;YAAA;YACAC,SAAA;cAAAF,IAAA;cAAAN,IAAA;YAAA;YACAS,OAAA;cAAAH,IAAA;YAAA;YACAI,WAAA;cAAAJ,IAAA;YAAA;UACA;QACA;QACAK,MAAA;UACAnB,IAAA;QACA;QACAoB,KAAA,GACA;UACAZ,IAAA;UACAR,IAAA;UACAO,WAAA;YACAC,IAAA;UACA;QACA,EACA;QACAa,KAAA,GACA;UACAb,IAAA;UACAc,IAAA;UACAC,GAAA;UACAC,GAAA;UACAC,QAAA;UACAC,SAAA;YACAC,SAAA;UACA;QACA,GACA;UACAnB,IAAA;UACAc,IAAA;UACAC,GAAA;UACAC,GAAA;UACAC,QAAA;UACAC,SAAA;YACAC,SAAA;UACA;QACA,EACA;QACAC,MAAA,GACA;UACAN,IAAA;UACAd,IAAA;UACAH,OAAA;YACAwB,cAAA,WAAAA,CAAAC,KAAA;cACA,OAAAA,KAAA;YACA;UACA;UACA9B,IAAA,GACA;QAEA,GACA;UACAsB,IAAA;UACAd,IAAA;UACAH,OAAA;YACAwB,cAAA,WAAAA,CAAAC,KAAA;cACA,OAAAA,KAAA;YACA;UACA;UACA9B,IAAA,GACA;QAEA,GACA;UACAsB,IAAA;UACAd,IAAA;UACAuB,UAAA;UACA1B,OAAA;YACAwB,cAAA,WAAAA,CAAAC,KAAA;cACA,OAAAA,KAAA;YACA;UACA;UACA9B,IAAA;QACA;MAEA;IACA;EACA;EACAgC,UAAA;IACAjC;EACA;EACAkC,QAAA,GAEA;EACAC,OAAA;IACA;IACAC,OAAA;MACA,KAAAC,MAAA,CAAAC,IAAA;QACAC,KAAA,OAAApC,SAAA;QACAqC,GAAA,OAAArC,SAAA;MACA,GAAAsC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAzC,IAAA,CAAA0C,IAAA;UACA,KAAAzC,SAAA,GAAAwC,GAAA,CAAAzC,IAAA,CAAA2C,MAAA;QACA;UACA,KAAAC,QAAA;YACApC,IAAA;YACAqC,OAAA,EAAAJ,GAAA,CAAAzC,IAAA,CAAA6C;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}